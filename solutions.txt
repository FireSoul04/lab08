URL https://github.com/FireSoul04/lab08

CLONE git@github.com:FireSoul04/lab08.git

BRANCH exercises

LAB 81-simple-gui

CASA 82-tdd-deathnote
Nel test delle regole controllo solo se restituisce errore con indice 0 o -1 in modo da essere più semplice.
Avrei dovuto usare il metodo String.isBlank anziché confrontare la stringa con una stringa vuota ("").
Avrei dovuto salvare i nomi degli umani come stringhe statiche campi della classe anziché come campi locali del metodo, stessa cosa per il tempo di attesa dello sleep.
Ho implementato i nomi delle cause di morti come campi statici e penso sa meglio.
Potevo aggiungere la clausola throws per lo sleep anziché gestire un try catch.
Nella mia implementazione di death, che da me è deadHuman, ho preferito salvare anche il nome nella classe e fare una lista, che secondo me è meglio.
Ho sbagliato il controllo del fatto che la causa e i dettagli di morte non cambiano, nella mia implementazione controllo se la causa o i dettagli di morte sono diversi, mentre dovrebbero essere uguali.
Nella mia implementazione di deathnote ho gestito il tempo dentro le funzioni writeCause e writeDetails della classe deathnote anziché della classe death.
Non ho controllato se l'indice della regola va in overflow.
Non ho decrementato di uno il numero della regola dentro il getRule.
Avrei dovuto usare Objects.requireNonNull anziché implementarlo per conto mio.
Nella mia implementazione ho controllato che il nome della persona non sia vuoto.
Potevo implementare un metodo per cercare direttamente un umano morto anziché implementarlo con un foreach ogni volta.

CASA 83-mvc-gui-reflection
La mia implementazione della reflection è meno estendibile di quella proposta nelle soluzioni.
La mia implementazione della view in standard output è gestita similmente a quella in swing.
Nella mia implementazione controllo se la view è null, mentre nelle soluzioni no, preferisco la mia soluzione.
